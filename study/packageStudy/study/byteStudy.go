package study

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"path"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var data = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\x41\x0a\x02\x31\x0c\x45\xf7\x3d\x45\x98\x03\x74\x70\x16\x6e\x86\x39\x82\x78\x84\x50\xb5\x2d\x81\x36\x2d\x69\x06\xf4\xf6\x12\x51\x97\x93\xe5\xe3\x3d\xf2\x89\x15\x7a\x16\x7a\xe8\xab\x47\xd8\x00\x4e\xab\x33\x56\xc3\xb3\x4b\xbb\x1b\x59\x56\x37\x54\x88\x33\x34\xa1\x4c\x1c\x0a\x5a\x80\x89\x4a\x04\x13\x26\xef\x67\x23\x73\x3d\xe3\x50\xf1\x49\xc7\xf4\x6f\x7a\x10\x25\xa5\xc6\xc7\x11\xe2\xf2\xed\xec\x3b\xef\xf5\x16\xe5\x9a\x2e\x7b\x51\x32\x0b\x7e\xb7\xc1\x67\xa2\x7b\x07\x00\x00\xff\xff\x2e\x9e\x4c\x5c\xb8\x00\x00\x00")

func tpl_boundary_condition_hypara() ([]byte, error) {
	return bindata_read(
		data,
		"./bytename.txt",
	)
}

func ByteMain(){
	rBytes,_:=tpl_boundary_condition_hypara()
	err := ioutil.WriteFile(path.Join("./", "hh.txt"), rBytes, 0644)
	fmt.Println("内容为:",rBytes,"\nerr=",err)
}
